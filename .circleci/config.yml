version: 2.1
jobs:
  checkout:
    docker:
      - image: 18120211/aws-ansible-22.04
    steps:
      - checkout
      # Add ssh keys with fingerprint
      - add_ssh_keys:
          fingerprints:
            - "36:c6:1e:19:7a:d4:77:2e:56:cc:11:6b:92:07:be:52"
      - run:
          name: "Checkout"
          command: |
            export BUILD_AGENT=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=build-agent" --query 'Reservations[*].Instances[0].PublicIpAddress' --output text)
            echo "Build agent: ${BUILD_AGENT}"
            ssh -o StrictHostKeyChecking=no ubuntu@${BUILD_AGENT} /home/ubuntu/project/scripts/checkout.sh
  linting-docker-syntax:
    docker:
      - image: 18120211/aws-ansible-22.04
    steps:
      - checkout
      # Add ssh keys with fingerprint
      - add_ssh_keys:
          fingerprints:
            - "36:c6:1e:19:7a:d4:77:2e:56:cc:11:6b:92:07:be:52"
      - run:
          name: "Liniting"
          command: |
            export BUILD_AGENT=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=build-agent" --query 'Reservations[*].Instances[0].PublicIpAddress' --output text)
            echo "Build agent: ${BUILD_AGENT}"
            ssh -o StrictHostKeyChecking=no ubuntu@${BUILD_AGENT} /home/ubuntu/project/scripts/linting-docker.sh
  build-docker-image:
    docker:
      - image: 18120211/aws-ansible-22.04
    steps:
      - checkout
      # Add ssh keys with fingerprint
      - add_ssh_keys:
          fingerprints:
            - "36:c6:1e:19:7a:d4:77:2e:56:cc:11:6b:92:07:be:52"
      - run:
          name: "Build docker image"
          command: |
            export BUILD_AGENT=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=build-agent" --query 'Reservations[*].Instances[0].PublicIpAddress' --output text)
            echo "Build agent: ${BUILD_AGENT}"
            echo "-----------------"
            ssh -o StrictHostKeyChecking=no ubuntu@${BUILD_AGENT} /home/ubuntu/project/scripts/build-docker-image.sh ${DOCKER_IMAGE} ${CIRCLE_SHA1}

  push-docker-image:
    docker:
      - image: 18120211/aws-ansible-22.04
    steps:
      - checkout
      # Add ssh keys with fingerprint
      - add_ssh_keys:
          fingerprints:
            - "36:c6:1e:19:7a:d4:77:2e:56:cc:11:6b:92:07:be:52"
      - run:
          name: "Push docker image"
          command: |
            export BUILD_AGENT=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=build-agent" --query 'Reservations[*].Instances[0].PublicIpAddress' --output text)
            echo "Build agent: ${BUILD_AGENT}"
            echo "-----------------"
            ssh -o StrictHostKeyChecking=no ubuntu@${BUILD_AGENT} /home/ubuntu/project/scripts/push-docker-image.sh ${DOCKER_IMAGE} ${DOCKER_USERNAME} ${DOCKER_PASSWORD}
  
  update-application-in-eks:
    docker:
      - image: 18120211/aws-ansible-22.04
    steps:
      - checkout
      # Add ssh keys with fingerprint
      - add_ssh_keys:
          fingerprints:
            - "36:c6:1e:19:7a:d4:77:2e:56:cc:11:6b:92:07:be:52"
      - run:
          name: "Update application"
          command: |
            export BUILD_AGENT=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=build-agent" --query 'Reservations[*].Instances[0].PublicIpAddress' --output text)
            echo "Build agent: ${BUILD_AGENT}"
            echo "-----------------"
            ssh -o StrictHostKeyChecking=no ubuntu@${BUILD_AGENT} /home/ubuntu/project/scripts/update-application.sh

workflows:
  default:
    jobs:
      - checkout:
          filters:
              branches:
                only: [main]
      - linting-docker-syntax:
          requires:
            - checkout
      - build-docker-image:
          requires:
            - linting-docker-syntax
      - push-docker-image:
          requires:
            - build-docker-image
      - update-application-in-eks:
          requires:
            - push-docker-image
